---
import BaseLayout from '../../layouts/BaseLayout.astro';
import ProfileEditor from '../../components/profile/ProfileEditor';
import ProfileStats from '../../components/profile/ProfileStats';
---

<BaseLayout 
  title="My Profile - ZH-Love"
  description="Your profile in ZH-Love community"
>
  <div class="min-h-screen bg-background">
    <div class="container mx-auto px-4 py-8">
      <!-- Profile Header -->
      <div class="bg-card border border-border rounded-lg p-8 mb-8">
        <div class="flex flex-col lg:flex-row items-center lg:items-start space-y-6 lg:space-y-0 lg:space-x-8">
          <!-- Avatar -->
          <div class="relative">
            <div id="current-avatar" class="w-32 h-32 bg-gradient-to-r from-green-600 to-green-700 rounded-full flex items-center justify-center">
              <svg class="w-16 h-16 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
            </div>
            <button 
              id="change-avatar-btn"
              class="absolute -bottom-2 -right-2 w-8 h-8 bg-green-600 hover:bg-green-700 rounded-full flex items-center justify-center transition-colors"
              title="Change Avatar"
            >
              <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
            </button>
            <input type="file" id="avatar-upload" accept="image/*" class="hidden" />
          </div>

          <!-- Profile Info -->
          <div class="flex-1 text-center lg:text-left">
            <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between mb-4">
              <div>
                <h1 id="profile-username" class="text-3xl font-bold text-white mb-2">Loading...</h1>
                <p id="profile-email" class="text-gray-400 mb-2">Loading...</p>
                <div class="flex items-center justify-center lg:justify-start space-x-4">
                  <span id="profile-level" class="px-3 py-1 bg-yellow-600 text-white text-sm rounded-full">
                    Level: --
                  </span>
                  <span id="profile-rank" class="px-3 py-1 bg-blue-600 text-white text-sm rounded-full">
                    Rank: --
                  </span>
                  <span id="profile-xp" class="px-3 py-1 bg-green-600 text-white text-sm rounded-full">
                    XP: --
                  </span>
                </div>
              </div>

              <!-- Edit Button -->
              <button 
                id="edit-profile-btn"
                class="px-6 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors flex items-center space-x-2 mt-4 lg:mt-0"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                </svg>
                <span>Edit Profile</span>
              </button>
            </div>

            <!-- Bio -->
            <div class="bg-gray-800 rounded-lg p-4 mb-4">
              <h3 class="text-lg font-semibold text-white mb-2">About Me</h3>
              <p id="profile-bio" class="text-gray-300 leading-relaxed">
                Loading...
              </p>
            </div>

            <!-- Join Date & Activity -->
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-sm text-gray-400">
              <p>
                Joined: <span id="join-date" class="text-white">--</span>
              </p>
              <p>
                Last Activity: <span id="last-activity" class="text-white">--</span>
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Profile Stats -->
      <ProfileStats client:load />

      <!-- Recent Achievements -->
      <div class="bg-card border border-border rounded-lg p-6 mb-8">
        <h2 class="text-xl font-semibold text-white mb-6">Recent Achievements</h2>
        <div id="achievements" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <div class="flex items-center justify-center py-8">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-green-600"></div>
          </div>
        </div>
      </div>

      <!-- My Clan -->
      <div class="bg-card border border-border rounded-lg p-6">
        <h2 class="text-xl font-semibold text-white mb-6">My Clan</h2>
        <div id="clan-info">
          <div class="flex items-center justify-center py-8">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-green-600"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Profile Editor Modal -->
  <ProfileEditor client:load />

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let currentUser = null;

      // Get current user
      const userData = localStorage.getItem('zh_love_user');
      if (userData) {
        currentUser = JSON.parse(userData);
        loadProfile();
      } else {
        window.location.href = '/en/login';
      }

      async function loadProfile() {
        try {
          const token = localStorage.getItem('zh_love_token');
          const response = await fetch('http://localhost:8080/api/auth/me', {
            headers: {
              'Authorization': `Bearer ${token}`,
              'Content-Type': 'application/json'
            }
          });

          if (response.ok) {
            const data = await response.json();
            currentUser = data.user;
            displayProfile(currentUser);
            loadAchievements();
            loadClanInfo();
          }
        } catch (error) {
          console.error('Error loading profile:', error);
        }
      }

      function displayProfile(user) {
        document.getElementById('profile-username').textContent = user.username;
        document.getElementById('profile-email').textContent = user.email;
        document.getElementById('profile-level').textContent = `Level: ${user.level || 1}`;
        document.getElementById('profile-rank').textContent = `Rank: ${user.rank || 'Beginner'}`;
        document.getElementById('profile-xp').textContent = `XP: ${user.xp || 0}`;
        document.getElementById('profile-bio').textContent = user.bio || 'No bio added yet. Click Edit Profile to add one.';
        document.getElementById('join-date').textContent = new Date(user.createdAt).toLocaleDateString('en-US');
        document.getElementById('last-activity').textContent = user.lastActivity ? 
          formatRelativeTime(user.lastActivity) : 'Now';

        // Set avatar if available
        if (user.avatar) {
          document.getElementById('current-avatar').innerHTML = 
            `<img src="${user.avatar}" alt="${user.username}" class="w-32 h-32 rounded-full object-cover">`;
        }
      }

      async function loadAchievements() {
        try {
          const token = localStorage.getItem('zh_love_token');
          const response = await fetch('http://localhost:8080/api/users/achievements', {
            headers: {
              'Authorization': `Bearer ${token}`,
              'Content-Type': 'application/json'
            }
          });

          if (response.ok) {
            const data = await response.json();
            displayAchievements(data.achievements || []);
          }
        } catch (error) {
          console.error('Error loading achievements:', error);
          displayAchievements([]);
        }
      }

      function displayAchievements(achievements) {
        const container = document.getElementById('achievements');
        
        if (achievements.length === 0) {
          container.innerHTML = `
            <div class="col-span-full text-center py-8">
              <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
              </svg>
              <p class="text-gray-400">No achievements yet</p>
              <p class="text-gray-500 text-sm mt-2">Start playing and participating to earn achievements!</p>
            </div>
          `;
          return;
        }

        container.innerHTML = achievements.map(achievement => `
          <div class="bg-gray-800 rounded-lg p-4 flex items-center space-x-4">
            <div class="w-12 h-12 bg-yellow-600 rounded-full flex items-center justify-center">
              <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
              </svg>
            </div>
            <div class="flex-1">
              <h3 class="text-white font-medium">${achievement.title}</h3>
              <p class="text-gray-400 text-sm">${achievement.description}</p>
              <p class="text-gray-500 text-xs mt-1">${formatRelativeTime(achievement.earnedAt)}</p>
            </div>
          </div>
        `).join('');
      }

      async function loadClanInfo() {
        try {
          const token = localStorage.getItem('zh_love_token');
          const response = await fetch('http://localhost:8080/api/users/clan', {
            headers: {
              'Authorization': `Bearer ${token}`,
              'Content-Type': 'application/json'
            }
          });

          if (response.ok) {
            const data = await response.json();
            displayClanInfo(data.clan);
          }
        } catch (error) {
          console.error('Error loading clan info:', error);
          displayClanInfo(null);
        }
      }

      function displayClanInfo(clan) {
        const container = document.getElementById('clan-info');
        
        if (!clan) {
          container.innerHTML = `
            <div class="text-center py-8">
              <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z"></path>
              </svg>
              <p class="text-gray-400 mb-4">You are not a member of any clan</p>
              <a href="/en/clans" class="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors">
                Browse Clans
              </a>
            </div>
          `;
          return;
        }

        container.innerHTML = `
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4">
              <div class="w-16 h-16 bg-gradient-to-r from-blue-600 to-blue-700 rounded-lg flex items-center justify-center">
                <span class="text-white font-bold text-lg">${clan.name[0]}</span>
              </div>
              <div>
                <h3 class="text-xl font-bold text-white">${clan.name}</h3>
                <p class="text-gray-400">${clan.description}</p>
                <div class="flex items-center space-x-4 mt-2">
                  <span class="text-sm text-gray-400">Members: ${clan.memberCount}</span>
                  <span class="text-sm text-gray-400">Points: ${clan.points}</span>
                  <span class="text-sm text-gray-400">Rank: ${clan.rank}</span>
                </div>
              </div>
            </div>
            <a href="/en/clans/${clan.id}" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors">
              View Clan
            </a>
          </div>
        `;
      }

      function formatRelativeTime(dateString) {
        const date = new Date(dateString);
        const now = new Date();
        const diffTime = now.getTime() - date.getTime();
        const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));
        
        if (diffDays === 0) {
          return 'Today';
        } else if (diffDays === 1) {
          return 'Yesterday';
        } else if (diffDays < 7) {
          return `${diffDays} days ago`;
        } else {
          return date.toLocaleDateString('en-US');
        }
      }

      // Event listeners
      document.getElementById('edit-profile-btn')?.addEventListener('click', function() {
        window.dispatchEvent(new CustomEvent('openProfileEditor', { 
          detail: { user: currentUser } 
        }));
      });

      document.getElementById('change-avatar-btn')?.addEventListener('click', function() {
        document.getElementById('avatar-upload').click();
      });

      document.getElementById('avatar-upload')?.addEventListener('change', async function(e) {
        const file = e.target.files[0];
        if (file) {
          const formData = new FormData();
          formData.append('avatar', file);

          try {
            const token = localStorage.getItem('zh_love_token');
            const response = await fetch('http://localhost:8080/api/users/avatar', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${token}`
              },
              body: formData
            });

            if (response.ok) {
              const data = await response.json();
              document.getElementById('current-avatar').innerHTML = 
                `<img src="${data.avatarUrl}" alt="${currentUser.username}" class="w-32 h-32 rounded-full object-cover">`;
            }
          } catch (error) {
            console.error('Error uploading avatar:', error);
          }
        }
      });
    });
  </script>
</BaseLayout> 