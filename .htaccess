RewriteEngine On
RewriteBase /

# Security Headers
Header always set X-Frame-Options "SAMEORIGIN"
Header always set X-XSS-Protection "1; mode=block"
Header always set X-Content-Type-Options "nosniff"
Header always set Referrer-Policy "strict-origin-when-cross-origin"
Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"

# HSTS (HTTP Strict Transport Security)
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

# Content Security Policy
Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: http:; media-src 'self' https:; object-src 'none'; frame-ancestors 'self';"

# Hide sensitive files
<Files ~ "^\.">
    Require all denied
</Files>

<Files ~ "\.(bak|config|dist|fla|inc|ini|log|psd|sh|sql|swp)$">
    Require all denied
</Files>

# Protect wp-config.php
<Files wp-config.php>
    Require all denied
</Files>

# Protect .env files
<Files .env>
    Require all denied
</Files>

# Protect composer files
<Files composer.json>
    Require all denied
</Files>

<Files composer.lock>
    Require all denied
</Files>

# Protect package.json
<Files package.json>
    Require all denied
</Files>

# Protect README files
<Files README.md>
    Require all denied
</Files>

# API Routes - Direct to backend
RewriteCond %{REQUEST_URI} ^/api/
RewriteRule ^api/(.*)$ /backend/public/index.php [QSA,L]

# Static assets - serve directly
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^(assets/|images/|css/|js/|fonts/|favicon\.|robots\.txt|sitemap\.xml).*$ - [L]

# Uploads - serve directly with security headers
RewriteCond %{REQUEST_URI} ^/uploads/
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^uploads/(.*)$ - [L,E=no-gzip:1]

# Language redirects
RewriteCond %{HTTP_ACCEPT_LANGUAGE} ^ar [NC]
RewriteCond %{REQUEST_URI} ^/$
RewriteRule ^(.*)$ /ar/ [R=302,L]

RewriteCond %{HTTP_ACCEPT_LANGUAGE} ^en [NC]
RewriteCond %{REQUEST_URI} ^/$
RewriteRule ^(.*)$ /en/ [R=302,L]

# Default to Arabic for root
RewriteRule ^$ /ar/ [R=302,L]

# Frontend routes - serve index.html for all unmatched routes
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} !^/api/
RewriteCond %{REQUEST_URI} !^/backend/
RewriteRule ^(.*)$ /index.html [L]

# Compression
<IfModule mod_deflate.c>
    # Compress HTML, CSS, JavaScript, Text, XML and fonts
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
    AddOutputFilterByType DEFLATE application/x-font
    AddOutputFilterByType DEFLATE application/x-font-opentype
    AddOutputFilterByType DEFLATE application/x-font-otf
    AddOutputFilterByType DEFLATE application/x-font-truetype
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE font/otf
    AddOutputFilterByType DEFLATE font/ttf
    AddOutputFilterByType DEFLATE image/svg+xml
    AddOutputFilterByType DEFLATE image/x-icon
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/xml
    
    # Remove browser bugs (only needed for really old browsers)
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    Header append Vary User-Agent
</IfModule>

# Browser Caching
<IfModule mod_expires.c>
    ExpiresActive on
    
    # Images
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/webp "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
    ExpiresByType image/x-icon "access plus 1 year"
    
    # Videos
    ExpiresByType video/mp4 "access plus 1 month"
    ExpiresByType video/webm "access plus 1 month"
    
    # Fonts
    ExpiresByType font/ttf "access plus 1 year"
    ExpiresByType font/otf "access plus 1 year"
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    
    # CSS and JavaScript
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    
    # Others
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType text/plain "access plus 1 month"
    ExpiresByType application/xml "access plus 1 week"
    ExpiresByType text/xml "access plus 1 week"
    
    # HTML
    ExpiresByType text/html "access plus 1 day"
</IfModule>

# Enable Keep-Alive
<IfModule mod_headers.c>
    Header set Connection keep-alive
</IfModule>

# CORS Headers for API
<IfModule mod_headers.c>
    SetEnvIf Origin "^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$" AccessControlAllowOrigin=$0
    SetEnvIf Origin "^https?://(.*\.)?zh-love\.com$" AccessControlAllowOrigin=$0
    Header set Access-Control-Allow-Origin %{AccessControlAllowOrigin}e env=AccessControlAllowOrigin
    Header set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    Header set Access-Control-Allow-Credentials "true"
</IfModule>

# Handle preflight OPTIONS requests
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteRule ^(.*)$ $1 [R=200,L]

# Prevent access to backup and temporary files
<FilesMatch "(\.(bak|config|dist|fla|inc|ini|log|psd|sh|sql|swp)|~)$">
    Require all denied
</FilesMatch>

# Prevent access to version control directories
RedirectMatch 404 /\.git
RedirectMatch 404 /\.svn
RedirectMatch 404 /\.hg

# Prevent access to node_modules
RedirectMatch 404 /node_modules

# Prevent access to composer vendor directory
RedirectMatch 404 /vendor

# Custom error pages
ErrorDocument 404 /404.html
ErrorDocument 403 /403.html
ErrorDocument 500 /500.html

# Disable server signature
ServerSignature Off

# Prevent access to PHP files in uploads directory
<Directory "/uploads">
    <Files "*.php">
        Require all denied
    </Files>
    <Files "*.phtml">
        Require all denied
    </Files>
    <Files "*.php3">
        Require all denied
    </Files>
    <Files "*.php4">
        Require all denied
    </Files>
    <Files "*.php5">
        Require all denied
    </Files>
    <Files "*.pl">
        Require all denied
    </Files>
    <Files "*.py">
        Require all denied
    </Files>
    <Files "*.jsp">
        Require all denied
    </Files>
    <Files "*.asp">
        Require all denied
    </Files>
    <Files "*.sh">
        Require all denied
    </Files>
    <Files "*.cgi">
        Require all denied
    </Files>
</Directory> 